var libpath = require("path"),
   http = require("http"),
   fs = require("fs"),
   url = require("url"),
   ext = require("./ext"),
   requireindex = require('requireindex'),
   view = require("./view.js"),
   controllers = requireindex("./Controllers"),
   logger = require('winston');
  // var load = require('express-load');

	//load('Controllers').into(controllers);


exports.port = 80;
exports.debug = false;
exports.defaultPath = "./";
exports.custom404 = "404.html";

var path = ".";

function startServer()
{
	var server = http.createServer(function (request, response)
	{		
		var uri = url.parse(request.url).pathname;
		uri = uri.indexOf("/") == 0 ? uri.substr(1) : uri;
		logger.log("info", uri);
		if(uri == "")
		{
			uri = exports.defaultPath;
		}
		
		serveMVC(uri, request, response);
	}).listen(exports.port);
	
	//TODO:We should make a routes file and add it here
	server.addListener('request', function (request, response) {
		//var uri = request.headers.host.replace("www.", "") + request.url;
	});

}

function serveMVC(fileName, request, response)
{
	fileName = fileName.toLowerCase();
	var methodTree = fileName.split("/");

	if(methodTree.length > 0)//does module exits?
	{
		var method = controllers;
		for(i=0;i < methodTree.length;i++)//move through the tree
		{
			if(typeof(method[methodTree[i]]) != "undefined")
			{
				method = method[methodTree[i]];
			}
			else
			{
				return404(response, request);
			}
		}

		if(typeof(method) == "function")
		{
			view.templates.push(fileName.indexOf("/") > 0 ? fileName : fileName + "/index");//the default, the base class should use the index view, all functions will use a view with their name
			method(request, response, view.templates, render);
		}
		else
		{
			return404(response, request);
		}
	}
	else
	{
		return404(response, request);
	}
}

function render(model, response, templates, templateExtension)
{
	if(typeof(templateExtension) != "undefined")
	{
		view.templateExtension = templateExtension;
	}

	view.render(templates, model, function(text, err)
	{
		if(err && ext.isNullOrEmpty(text))
		{
			return404(response, request);
		}
		else if(err)
		{
			return500(text, response);
		}
		else
		{
			return200(text, response);
		}
	});
}

function return404(response, request)
{
	response.writeHead(400,
	{
		"Content-Type": "text/html"
	});
	ext.getFile( url.parse(exports.custom404).pathname, function(file)
	{
		if(file != null)
		{
			response.write(file);
			response.end();
		}
	});
}

function return500(text, response)
{
	response.writeHead(500,
	{
		"Content-Type": "text/plain"
	});
	response.write(text + "\n");
	response.end();
	return;
}

function return200(text, response)
{
	response.writeHead(200,
	{
		"Content-Type": "text/html"
	});
	response.write(text);
	response.end();
	return;
}

exports.start = startServer;
